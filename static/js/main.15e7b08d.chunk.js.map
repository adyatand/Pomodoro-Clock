{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","breakTime","sessionTime","incrementBreak","setState","decrementBreak","incrementSession","document","getElementById","innerHTML","decrementSession","refreshSession","style","pointerEvents","innerText","clearInterval","myInterval","breakInterval","startSession","time","setInterval","minutes","Math","floor","seconds","play","breakMinutes","breakSeconds","className","id","onClick","this","bind","src","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.15e7b08d.chunk.js","sourcesContent":["import React from 'react';\nimport { FaArrowUp, FaArrowDown} from 'react-icons/fa';\nimport { IoPlay, IoReloadCircle } from 'react-icons/io5';\nimport './App.css';\n\nclass App extends React.Component {\n\n  state = {\n    breakTime: 5,\n    sessionTime: 25\n  }\n\n  incrementBreak = () => {\n    if(this.state.breakTime < 60) {\n    this.setState({\n      breakTime: this.state.breakTime + 1\n    })\n  }\n  }\n\n  decrementBreak = () => {\n    if(this.state.breakTime > 1) {\n      this.setState({\n        breakTime: this.state.breakTime - 1\n      })\n    }\n  }\n\n  incrementSession = () => {\n    if(this.state.sessionTime < 60) {\n      this.setState({\n        sessionTime: this.state.sessionTime + 1\n      }, () => {\n        document.getElementById(\"sessionLeft\").innerHTML = this.state.sessionTime + \":00\"\n      })\n    }\n  }\n\n  decrementSession = () => {\n    if(this.state.sessionTime > 1) {\n      this.setState({\n        sessionTime: this.state.sessionTime - 1\n      }, () => {\n        document.getElementById(\"sessionLeft\").innerHTML = this.state.sessionTime + \":00\"\n      })\n    }\n  }\n\n  refreshSession = () => {\n    document.getElementById(\"playButton\").style.pointerEvents = 'auto';\n    document.getElementById(\"topic\").innerText = \"Session\";\n    this.setState({sessionTime: 25}, () => {\n      document.getElementById(\"sessionLeft\").innerHTML = this.state.sessionTime + \":00\";\n    })\n    this.setState({breakTime: 5})\n    clearInterval(this.myInterval)\n    clearInterval(this.breakInterval)\n  }\n\n  startSession = () => {\n    document.getElementById(\"playButton\").style.pointerEvents = 'none';\n    document.getElementById(\"topic\").innerText = \"Session\";\n    let time = this.state.sessionTime *60\n    this.myInterval = setInterval(() => {\n      if(time > 0) {\n      time = time - 1\n      let minutes = Math.floor(time/60);\n      let seconds = time % 60;\n      seconds = seconds < 10 ? \"0\" + seconds : seconds;\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\n      document.getElementById(\"sessionLeft\").innerHTML = `${minutes}:${seconds}`\n    } else if(time === 0) {\n      document.getElementById(\"audioBeep\").play()\n      clearInterval(this.myInterval)\n      document.getElementById(\"topic\").innerText = \"Break\";\n      let breakTime = this.state.breakTime *60;\n      this.breakInterval = setInterval(() => {\n        if(breakTime > 0) {\n          breakTime = breakTime - 1\n          let breakMinutes = Math.floor(breakTime/60);\n          let breakSeconds = breakTime % 60;\n          breakSeconds = breakSeconds < 10 ? \"0\" + breakSeconds : breakSeconds;\n          breakMinutes = breakMinutes < 10 ? \"0\" + breakMinutes : breakMinutes;\n          document.getElementById(\"sessionLeft\").innerHTML = `${breakMinutes}:${breakSeconds}`\n        } else if(breakTime === 0) {\n          document.getElementById(\"audioBeep\").play()\n          clearInterval(this.breakInterval)\n          this.startSession();\n        }\n      },1000)\n    }\n    }, 1000)\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div id=\"header\"><h1>Pomodoro Clock</h1></div>\n        <center>\n        <div className=\"controls\">\n          <div id=\"breakDiv\" className=\"customizeDiv\">\n            <p>Break Length</p>\n            <FaArrowUp onClick={this.incrementBreak.bind(this)} className=\"arrow\"/>\n            <span>{this.state.breakTime}</span>\n            <FaArrowDown onClick={this.decrementBreak.bind(this)} className=\"arrow\"/>\n          </div>\n          <div id=\"focusDiv\" className=\"customizeDiv\">\n            <p>Session Length</p>\n            <FaArrowUp onClick={this.incrementSession.bind(this)} className=\"arrow\"/>\n            <span>{this.state.sessionTime}</span>\n            <FaArrowDown onClick={this.decrementSession.bind(this)} className=\"arrow\"/>\n          </div>\n        </div>\n        </center>\n      \n        <div id=\"working\">\n          <div id=\"sessionDiv\">\n            <p id=\"topic\">Session</p>\n            <p id=\"sessionLeft\">{this.state.sessionTime}:00</p>\n          </div>\n          <div id=\"buttons\">\n            <button onClick={this.startSession.bind(this)} className=\"button\" id=\"playButton\"><IoPlay/></button>\n            <button onClick={this.refreshSession.bind(this)} className=\"button\"><IoReloadCircle /></button>\n          </div>\n        </div>\n        <audio id=\"audioBeep\" src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"></audio>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}